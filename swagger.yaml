openapi: 3.0.3
info:
  title: Currency Exchange API
  description: A comprehensive currency exchange system API for managing currencies, exchange rates, and conversions
  version: 3.0.0
  contact:
    name: API Support
    email: support@currencyexchange.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://api.currencyexchange.com/v1
    description: Production server

paths:
  /currencies:
    get:
      tags:
        - Currencies
      summary: Get all supported currencies
      description: Retrieve a list of all supported currencies
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: search
          in: query
          description: Search currencies by code or name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Currency'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Currencies
      summary: Create a new currency
      description: Add a new currency to the system
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCurrencyRequest'
      responses:
        '201':
          description: Currency created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Currency'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /currencies/{id}:
    get:
      tags:
        - Currencies
      summary: Get currency by ID
      description: Retrieve a specific currency by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Currency ID
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Currency'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Currencies
      summary: Update currency
      description: Update an existing currency
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Currency ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCurrencyRequest'
      responses:
        '200':
          description: Currency updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Currency'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Currencies
      summary: Delete currency
      description: Delete a currency from the system
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Currency ID
          schema:
            type: string
      responses:
        '200':
          description: Currency deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Currency deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /exchange-rates:
    get:
      tags:
        - Exchange Rates
      summary: Get current exchange rates
      description: Retrieve current exchange rates for specified currencies
      parameters:
        - name: base
          in: query
          description: Base currency code (default USD)
          required: false
          schema:
            type: string
            example: USD
        - name: target
          in: query
          description: Target currency codes (comma-separated)
          required: false
          schema:
            type: string
            example: EUR,GBP,JPY
        - name: date
          in: query
          description: Specific date for historical rates (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
            example: "2024-01-15"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ExchangeRates'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Exchange Rates
      summary: Update exchange rates
      description: Update exchange rates for specific currency pairs
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExchangeRatesRequest'
      responses:
        '200':
          description: Exchange rates updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ExchangeRates'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /convert:
    post:
      tags:
        - Currency Conversion
      summary: Convert currency
      description: Convert amount from one currency to another
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertCurrencyRequest'
      responses:
        '200':
          description: Conversion successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/ConversionResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /convert/history:
    get:
      tags:
        - Currency Conversion
      summary: Get conversion history
      description: Retrieve historical conversion data
      security:
        - bearerAuth: []
      parameters:
        - name: from
          in: query
          description: Source currency code
          required: false
          schema:
            type: string
        - name: to
          in: query
          description: Target currency code
          required: false
          schema:
            type: string
        - name: start_date
          in: query
          description: Start date for history (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: End date for history (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConversionHistory'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and get access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: User registration
      description: Register a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Currency:
      type: object
      properties:
        id:
          type: string
          example: "64a7b8c9d1e2f3g4h5i6j7k8"
        code:
          type: string
          example: "USD"
          description: Three-letter currency code
        name:
          type: string
          example: "US Dollar"
        symbol:
          type: string
          example: "$"
        decimal_places:
          type: integer
          example: 2
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - code
        - name
        - symbol
        - decimal_places

    CreateCurrencyRequest:
      type: object
      properties:
        code:
          type: string
          example: "EUR"
          minLength: 3
          maxLength: 3
        name:
          type: string
          example: "Euro"
          minLength: 1
          maxLength: 100
        symbol:
          type: string
          example: "€"
          minLength: 1
          maxLength: 10
        decimal_places:
          type: integer
          example: 2
          minimum: 0
          maximum: 10
      required:
        - code
        - name
        - symbol
        - decimal_places

    UpdateCurrencyRequest:
      type: object
      properties:
        name:
          type: string
          example: "Euro"
          minLength: 1
          maxLength: 100
        symbol:
          type: string
          example: "€"
          minLength: 1
          maxLength: 10
        decimal_places:
          type: integer
          example: 2
          minimum: 0
          maximum: 10
        is_active:
          type: boolean
          example: true

    ExchangeRates:
      type: object
      properties:
        base:
          type: string
          example: "USD"
        date:
          type: string
          format: date
          example: "2024-01-15"
        rates:
          type: object
          additionalProperties:
            type: number
            format: float
          example:
            EUR: 0.85
            GBP: 0.75
            JPY: 110.50
        last_updated:
          type: string
          format: date-time

    UpdateExchangeRatesRequest:
      type: object
      properties:
        base:
          type: string
          example: "USD"
        rates:
          type: object
          additionalProperties:
            type: number
            format: float
          example:
            EUR: 0.85
            GBP: 0.75
            JPY: 110.50
      required:
        - base
        - rates

    ConvertCurrencyRequest:
      type: object
      properties:
        from:
          type: string
          example: "USD"
        to:
          type: string
          example: "EUR"
        amount:
          type: number
          format: float
          example: 100.00
          minimum: 0.01
        date:
          type: string
          format: date
          description: Optional date for historical conversion
      required:
        - from
        - to
        - amount

    ConversionResult:
      type: object
      properties:
        from:
          type: string
          example: "USD"
        to:
          type: string
          example: "EUR"
        amount:
          type: number
          format: float
          example: 100.00
        converted_amount:
          type: number
          format: float
          example: 85.00
        exchange_rate:
          type: number
          format: float
          example: 0.85
        date:
          type: string
          format: date
        timestamp:
          type: string
          format: date-time

    ConversionHistory:
      type: object
      properties:
        id:
          type: string
        from:
          type: string
          example: "USD"
        to:
          type: string
          example: "EUR"
        amount:
          type: number
          format: float
          example: 100.00
        converted_amount:
          type: number
          format: float
          example: 85.00
        exchange_rate:
          type: number
          format: float
          example: 0.85
        created_at:
          type: string
          format: date-time

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          example: "password123"
      required:
        - email
        - password

    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          example: "password123"
          minLength: 6
        confirm_password:
          type: string
          format: password
          example: "password123"
      required:
        - name
        - email
        - password
        - confirm_password

    AuthResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            created_at:
              type: string
              format: date-time
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expires_in:
          type: integer
          example: 3600

    Pagination:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 10
        total:
          type: integer
          example: 100
        total_pages:
          type: integer
          example: 10

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error message"
        error_code:
          type: string
          example: "VALIDATION_ERROR"
        details:
          type: array
          items:
            type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: "Invalid request parameters"
            error_code: "VALIDATION_ERROR"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: "Authentication required"
            error_code: "UNAUTHORIZED"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: "Resource not found"
            error_code: "NOT_FOUND"

    Conflict:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: "Resource already exists"
            error_code: "CONFLICT"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: "Internal server error"
            error_code: "INTERNAL_ERROR"

tags:
  - name: Currencies
    description: Currency management operations
  - name: Exchange Rates
    description: Exchange rate operations
  - name: Currency Conversion
    description: Currency conversion operations
  - name: Authentication
    description: User authentication operations 